buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
            jcenter()
        }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
        classpath "com.marklogic:ml-gradle:3.0.0"
    }
}

plugins {
    id "com.marklogic.ml-gradle" version "3.0.0"
}

mlPostDeploy.dependsOn ":mlJobRepo:deployMarkLogicJobRepository"
mlUndeploy.dependsOn "mlJobRepo:undeployMarkLogicJobRepository"

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://developer.marklogic.com/maven2/" }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '4.3'
    }
}


subprojects {

    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "idea"
    apply plugin: "checkstyle"

    /*
     *  multi project builds must apply the bintray plugin
     *  and the plugin configuration to every project which
     *  its artifacts you wish to publish to bintray.
     */

    if (it.name in ["core", "infrastructure", "test", "http"]) {
        apply plugin: "com.jfrog.bintray"
    }

    ext {
        springBatchVersion = '3.0.8.RELEASE'
        springVersion = '4.3.9.RELEASE'
    }

    dependencies {
        compile "org.slf4j:slf4j-api:1.7.25"
        compile "org.slf4j:slf4j-log4j12:1.7.25"
        compile "org.apache.logging.log4j:log4j-api:2.9.1"

        testCompile "junit:junit:4.12"
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    checkstyle {
        configFile = file("${project.rootDir}/dev-tools/checkstyle/checkstyle.xml")
        toolVersion = '7.1.2'
    }

    if (it.name in ["core", "infrastructure", "test", "http"])  {
        task sourcesJar(type: Jar, dependsOn: classes) {
            baseName = artifactId
            version = project.version
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        jar {
            baseName = artifactId
            version = project.version
        }

        /*
         * Assumes each project has a single publication.
         */
        publishing {
            publications {
                mainJavaWithSources(MavenPublication) {
                    groupId group
                    artifactId project.property("artifactId")
                    version project.version
                    from components.java
                    artifact sourcesJar
                }
            }
        }
    }
}

